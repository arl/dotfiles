{    
    "editor.fontFamily": "  'L- Consolas', 'Consolas', 'Courier New', monospace, 'Droid Sans Fallback'",
    "editor.fontLigatures": true,
    "editor.roundedSelection": false,
    "editor.mouseWheelZoom": true,
    "workbench.statusBar.visible": true,
    "workbench.colorCustomizations": {
        "editor.selectionBackground": "#435594",
        "editor.selectionHighlightBackground": "#7383B4",
        "terminalCursor.foreground": "#00ffaa"
    },
    "files.exclude": {
        "**/.*.swp": true,
        "**/.DS_Store": true,
        "**/.git": true,
        "**/.hg": true,
        "**/.svn": true,
        "**/*.o": true,
        "**/node_modules": true,
        "**/tags": true
    },
    "C_Cpp.intelliSenseEngine": "Default",
    "extensions.ignoreRecommendations": false,
    "gitlens.advanced.messages": {
        "suppressCommitHasNoPreviousCommitWarning": false,
        "suppressCommitNotFoundWarning": false,
        "suppressFileNotUnderSourceControlWarning": false,
        "suppressGitVersionWarning": false,
        "suppressLineUncommittedWarning": false,
        "suppressNoRepositoryWarning": false,
        "suppressUpdateNotice": false,
        "suppressWelcomeNotice": true
    },
    "breadcrumbs.enabled": true,
    "editor.minimap.enabled": true,
    "editor.renderControlCharacters": true,
    "editor.renderWhitespace": "none",
    "editor.selectionHighlight": true,
    "explorer.confirmDelete": false,
    "files.autoSave": "off",
    "gitlens.advanced.telemetry.enabled": false,
    "gitlens.codeLens.enabled": false,
    "gitlens.defaultDateFormat": "Do, MMMM YYYY h:mma",
    "gitlens.defaultDateShortFormat": "D MMM YYYY",
    "gitlens.settings.mode": "advanced",
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.rendererType": "dom",
    "window.menuBarVisibility": "default",
    "workbench.sideBar.location": "left",
    "workbench.startupEditor": "newUntitledFile",
    "peacock.favoriteColors": [
        {
            "name": "Angular Red",
            "value": "#b52e31"
        },
        {
            "name": "Auth0 Orange",
            "value": "#eb5424"
        },
        {
            "name": "Azure Blue",
            "value": "#007fff"
        },
        {
            "name": "C# Purple",
            "value": "#68217A"
        },
        {
            "name": "Gatsby Purple",
            "value": "#639"
        },
        {
            "name": "Go Cyan",
            "value": "#5dc9e2"
        },
        {
            "name": "Java Blue-Gray",
            "value": "#557c9b"
        },
        {
            "name": "JavaScript Yellow",
            "value": "#f9e64f"
        },
        {
            "name": "Mandalorian Blue",
            "value": "#1857a4"
        },
        {
            "name": "Node Green",
            "value": "#215732"
        },
        {
            "name": "React Blue",
            "value": "#00b3e6"
        },
        {
            "name": "Something Different",
            "value": "#832561"
        },
        {
            "name": "Vue Green",
            "value": "#42b883"
        }
    ],
    "goOutliner.extendExplorerTab": true,
    "telemetry.enableTelemetry": false,
    "vsicons.dontShowNewVersionMessage": true,
    "workbench.colorTheme": "Gruvbox Dark (Soft)",

    "go.formatTool": "goimports",
    "go.gocodeAutoBuild": false,
    "go.autocompleteUnimportedPackages": true,
   // Go settings with gopls from Reddit https://www.reddit.com/r/golang/comments/dficva/best_ide_to_work_with_go_modules/f33h6ek
    "go.useCodeSnippetsOnFunctionSuggest": true,
    "go.useLanguageServer": true,
    "go.alternateTools": {
        "go-languageserver": "gopls"
    },
    "go.languageServerExperimentalFeatures": {
        "format": true,
        "autoComplete": true,
        "goToDefinition": true,
        "hover": true,
        "signatureHelp": true,
        "goToTypeDefinition": true,
        "goToImplementation": true,
        "documentSymbols": true,
        "workspaceSymbols": true,
        "findReferences": true,
        "documentLink": true
    },
    "go.buildOnSave": "off",
    "go.vetOnSave": "off",
    "go.useCodeSnippetsOnFunctionSuggestWithoutType": true,
    "go.docsTool": "gogetdoc",
    "editor.codeActionsOnSave": {
        "source.organizeImports": true
    }
}
