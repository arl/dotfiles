##################################
# general options
##################################

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# make tmux display things in 256 colors
set -g default-terminal "screen-256color"

# shorten command delay
set -sg escape-time 1
set-option -g repeat-time 1

# Ctrl <- / -> to jump words
set-window-option -g xterm-keys on
unbind-key -n C-Left
unbind-key -n C-Right

set-option -ga terminal-overrides ",xterm-256color:Tc"

# we don't want window names to be changed automatically
set-option -g allow-rename off

##################################
# mouse
##################################

# activate mouse scroll in copy mode
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# <<< following comes from https://unix.stackexchange.com/a/318285/149969
# Linux only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi C-WheelUpPane send-keys -X halfpage-up
bind -T copy-mode-vi C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow,
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
# >>>

##################################
# additional key bindings
##################################

# 'online' config reloading
bind-key R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# open a man page in a vertical split
bind-key m command-prompt -p "manpage?" "split-window -h 'vman %1'"

# open a man page in a new window
bind-key M command-prompt -p "manpage?" "new-window -n 'man %1' 'vman %1'"

# Use Alt-arrow keys without prefix key to switch panes
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

# Shift arrow to switch windows
bind-key -n S-Left previous-window
bind-key -n S-Right next-window

##################################
# back to good ol'screen shortcuts
##################################

# C-a...
unbind C-b
set -g prefix C-a

# C-a a -> go to beggining of the line
bind a send-prefix
bind C-a last-window

bind A command-prompt 'rename-window "%%"'

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

##################################
# Panes
##################################

# resize panes easily with :
# bind + Ctrl-Dir
# Dir: direction in which you want to resize
bind C-Left resize-pane -L
bind C-Down resize-pane -D
bind C-Up resize-pane -U
bind C-Right resize-pane -R

# keep current directory when splitting windows
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

##################################
# status bar
##################################

# move around in 'vi' mode
set -g status-keys vi
set -g mode-keys vi

##################################
# Design changes
##################################

# panes
set -g pane-border-format "#[bg=black,fg=colour238]"
set -g pane-active-border-style "fg=colour162"

## Status bar design
# status line
set -g status-justify left
set -g status-bg default
set -g status-fg colour12
set -g status-interval 2

# messaging
set -g message-style "bg=yellow,fg=black"
set -g message-command-style "bg=black,fg=blue"

#window mode
setw -g mode-style "bg=colour6,fg=colour0"

# window status
setw -g window-status-format "#[fg=magenta,bg=black] #I #[bg=cyan,fg=colour8] #W #F"
setw -g window-status-style "bg=green,fg=black,reverse"

setw -g window-status-current-format "#[bg=brightmagenta,fg=colour8] #I #[fg=colour8,bg=colour14] #W #F"
setw -g window-status-current-style "bg=colour0,fg=colour11,dim"

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# The modes
setw -g clock-mode-colour colour135
setw -g mode-style "fg=colour196,bg=colour238,bold"

# The panes
set -g pane-active-border-style "fg=colour51,bg=colour236"

# The statusbar
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137

# status-left -> session date/time
set -g status-left "#[fg=black,bg=brightblue]#S#[fg=brightblue,bg=default]â®€ #[fg=colour4] #(battery.sh) #[fg=brightgreen,bg=default] %d/%m %I:%M    "
set -g status-left-length 100

# status-right -> gitmux
set -g status-right-length 250
# default config
set -g status-right '#(gitmux "#{pane_current_path}")'
# with config file
#set -g status-right '#(gitmux -cfg ~/.gitmux.cfg "#{pane_current_path}")'
# during gitmux development
#set -g status-right '#(go run -C ~/dev/gitmux . -cfg gitmux.cfg "#{pane_current_path}")'

setw -g window-status-bell-style "fg=colour255,bg=colour1,bold"

# messages
set -g message-style "fg=colour232,bg=colour166,bold"
